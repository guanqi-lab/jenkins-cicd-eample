pipeline {
    agent any

    environment {
        // Replace with your GitHub username and repository name
        GHCR_HOSTNAME = 'ghcr.io'
        GITHUB_USER = 'guanqi-lab'
        IMAGE_NAME = "${GITHUB_USER}/jenkins-cicd-example"
    }

    stages {
        stage('Determine Image Tag') {
            steps {
                script {
                    def imageTag
                    if (env.TAG_NAME) {
                        imageTag = env.TAG_NAME
                    } else {
                        def safeBranchName = env.BRANCH_NAME.replaceAll('/', '-')
                        imageTag = "${safeBranchName}-${env.BUILD_NUMBER}"
                    }
                    env.IMAGE_TAG = imageTag
                    echo "Building with Image Tag: ${env.IMAGE_TAG}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}:${env.IMAGE_TAG}", ".") [1]
                }
            }
        }

        stage('Push to GHCR') {
            steps {
                script {
                    docker.withRegistry("https://${GHCR_HOSTNAME}", 'github-ghcr-token') { [1]
                        docker.image("${IMAGE_NAME}:${env.IMAGE_TAG}").push()
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build successful. Sending email notification...'
            // The 'script' block is necessary to run advanced logic like this
            script {
                // All parameters MUST be inside the emailext() parentheses
                emailext(
                    to: 'q42722180@gmail.com', // <-- IMPORTANT: Change this to your email
                    subject: "✅ SUCCESS: Build for ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    body: """<p>Build successful for branch/tag: <b>${env.BRANCH_NAME}</b></p>
                             <p>Commit: ${GIT_COMMIT}</p>
                             <p>Pushed Docker image: <b>ghcr.io/${GITHUB_USERNAME.toLowerCase()}/hello-world-go:${IMAGE_TAG}</b></p>
                             <p>Check console output at <a href="${env.BUILD_URL}">Jenkins Build</a></p>""",
                    mimeType: 'text/html'
                )
            }
        }
        failure {
            echo 'Build failed. Sending email notification...'
            script {
                emailext(
                    to: 'q42722180@gmail.com', // <-- IMPORTANT: Change this to your email
                    subject: "❌ FAILURE: Build for ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    body: """<p>Build FAILED for branch/tag: <b>${env.BRANCH_NAME}</b></p>
                             <p>Please check the console output for errors at <a href="${env.BUILD_URL}">Jenkins Build</a></p>""",
                    mimeType: 'text/html'
                )
            }
        }
    }
}